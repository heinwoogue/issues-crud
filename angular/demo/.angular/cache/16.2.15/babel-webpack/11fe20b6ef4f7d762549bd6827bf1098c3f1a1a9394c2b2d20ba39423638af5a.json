{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { EMPTY } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FlightService {\n  constructor(http) {\n    this.http = http;\n    this.flightList = [];\n  }\n  findById(id) {\n    const url = `http://www.angular.at/api/issue/${id}`;\n    const params = {\n      'id': id\n    };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  find(filter) {\n    const url = `http://www.angular.at/api/issue`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    const params = {\n      'from': filter.from,\n      'to': filter.to\n    };\n    return this.http.get(url, {\n      params,\n      headers\n    });\n  }\n  save(entity) {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/issue/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put(url, entity, {\n        headers,\n        params\n      });\n    } else {\n      url = `http://www.angular.at/api/issue`;\n      return this.http.post(url, entity, {\n        headers,\n        params\n      });\n    }\n  }\n  delete(entity) {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/issue/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete(url, {\n        headers,\n        params\n      });\n    }\n    return EMPTY;\n  }\n  static #_ = this.ɵfac = function FlightService_Factory(t) {\n    return new (t || FlightService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FlightService,\n    factory: FlightService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","EMPTY","FlightService","constructor","http","flightList","findById","id","url","params","headers","set","get","find","filter","from","to","save","entity","toString","put","post","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/Users/heinrichwoogue/Desktop/Heinrich/study/issues-crud/angular/demo/src/app/issue/issue.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { Issue } from './issues';\n\n@Injectable()\nexport class FlightService {\n  flightList: Issue[] = [];\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Issue> {\n    const url = `http://www.angular.at/api/issue/${id}`;\n    const params = { 'id': id };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get<Issue>(url, { params, headers });\n  }\n\n  find(filter: FlightFilter): Observable<Issue[]> {\n    const url = `http://www.angular.at/api/issue`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n\n    const params = {\n      'from': filter.from,\n      'to': filter.to,\n    };\n\n    return this.http.get<Issue[]>(url, { params, headers });\n  }\n\n  save(entity: Issue): Observable<Issue> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/issue/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Issue>(url, entity, { headers, params });\n    } else {\n      url = `http://www.angular.at/api/issue`;\n      return this.http.post<Issue>(url, entity, { headers, params });\n    }\n  }\n\n  delete(entity: Issue): Observable<Issue> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/issue/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Issue>(url, { headers, params });\n    }\n    return EMPTY;\n  }\n}\n\n"],"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,SAASC,KAAK,QAAoB,MAAM;;;AAIxC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,UAAU,GAAY,EAAE;EAGxB;EAEAC,QAAQA,CAACC,EAAU;IACjB,MAAMC,GAAG,GAAG,mCAAmCD,EAAE,EAAE;IACnD,MAAME,MAAM,GAAG;MAAE,IAAI,EAAEF;IAAE,CAAE;IAC3B,MAAMG,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IACnE,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAQJ,GAAG,EAAE;MAAEC,MAAM;MAAEC;IAAO,CAAE,CAAC;EACvD;EAEAG,IAAIA,CAACC,MAAoB;IACvB,MAAMN,GAAG,GAAG,iCAAiC;IAC7C,MAAME,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;IAEnE,MAAMF,MAAM,GAAG;MACb,MAAM,EAAEK,MAAM,CAACC,IAAI;MACnB,IAAI,EAAED,MAAM,CAACE;KACd;IAED,OAAO,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAAUJ,GAAG,EAAE;MAAEC,MAAM;MAAEC;IAAO,CAAE,CAAC;EACzD;EAEAO,IAAIA,CAACC,MAAa;IAChB,IAAIT,MAAM,GAAG,IAAIT,UAAU,EAAE;IAC7B,IAAIQ,GAAG,GAAG,EAAE;IACZ,MAAME,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,IAAIO,MAAM,CAACX,EAAE,EAAE;MACbC,GAAG,GAAG,mCAAmCU,MAAM,CAACX,EAAE,CAACY,QAAQ,EAAE,EAAE;MAC/DV,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACW,GAAG,CAAC,IAAI,EAAEO,MAAM,CAACX,EAAE,CAACY,QAAQ,EAAE,CAAC;MACzD,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAQZ,GAAG,EAAEU,MAAM,EAAE;QAAER,OAAO;QAAED;MAAM,CAAE,CAAC;KAC9D,MAAM;MACLD,GAAG,GAAG,iCAAiC;MACvC,OAAO,IAAI,CAACJ,IAAI,CAACiB,IAAI,CAAQb,GAAG,EAAEU,MAAM,EAAE;QAAER,OAAO;QAAED;MAAM,CAAE,CAAC;;EAElE;EAEAa,MAAMA,CAACJ,MAAa;IAClB,IAAIT,MAAM,GAAG,IAAIT,UAAU,EAAE;IAC7B,IAAIQ,GAAG,GAAG,EAAE;IACZ,MAAME,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzE,IAAIO,MAAM,CAACX,EAAE,EAAE;MACbC,GAAG,GAAG,mCAAmCU,MAAM,CAACX,EAAE,CAACY,QAAQ,EAAE,EAAE;MAC/DV,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACW,GAAG,CAAC,IAAI,EAAEO,MAAM,CAACX,EAAE,CAACY,QAAQ,EAAE,CAAC;MACzD,OAAO,IAAI,CAACf,IAAI,CAACkB,MAAM,CAAQd,GAAG,EAAE;QAAEE,OAAO;QAAED;MAAM,CAAE,CAAC;;IAE1D,OAAOR,KAAK;EACd;EAAC,QAAAsB,CAAA,G;qBAjDUrB,aAAa,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb1B,aAAa;IAAA2B,OAAA,EAAb3B,aAAa,CAAA4B;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}